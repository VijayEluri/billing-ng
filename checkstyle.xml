<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--

  Checkstyle configuration enforcing good coding practices and maximum
  readability. This configuration tries to catch the most common programming
  errors while enfocing some basic style and formatting constraints.
  
  based loosely on Suns "Code Conventions for the Java Programming Language"
  * http://java.sun.com/docs/codeconv/

-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->
    
    <module name="FileLength"/>        
    <module name="FileTabCharacter"/>    
    
    <module name="RegexpSingleline">
       <property name="format" value="\s+$"/>
       <property name="minimum" value="0"/>
       <property name="maximum" value="0"/>
       <property name="message" value="Line has trailing spaces."/>
    </module>


    <!-- Checks for individual Java source files -->
    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>
        

        <!-- Annotations                                                  -->
        <!-- See http://checkstyle.sourceforge.net/config_annotation.html -->            
        <module name="AnnotationUseStyle">
            <property name="elementStyle" value="compact_no_array"/>
            <property name="trailingArrayComma" value="never"/>
            <property name="closingParens" value="ignore"/>
        </module>
        
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
                        
        
        <!-- Javadoc                                          -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocType">
            <property name="severity" value="info"/>
        </module>

        <module name="JavadocStyle">
            <property name="severity" value="info"/>
        </module>
        
        <module name="JavadocMethod">
            <property name="allowMissingPropertyJavadoc" value="true"/>
            <property name="allowUndeclaredRTE" value="true"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
            
            <property name="severity" value="info"/>
        </module>               


        <!-- Naming Conventions                              -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- generics -->
        <module name="ClassTypeParameterName"/>
        <module name="MethodTypeParameterName"/>


        <!-- Imports                                         -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        
        <module name="IllegalImport"/> <!-- sun.* packages -->
        
        <module name="AvoidStarImport">
            <property name="severity" value="warning"/>
        </module>

        <module name="RedundantImport">
            <property name="severity" value="warning"/>
        </module>

        <module name="UnusedImports">
            <property name="severity" value="warning"/>
        </module>


        <!-- Size Violations                                -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="120"/>
            <property name="ignorePattern" value="^ *\* *[^ ]+$"/> <!-- ignore javadoc -->
        </module>
        
        <module name="MethodLength">
            <property name="max" value="100"/>
            <property name="countEmpty" value="false"/>
        </module>
        
        <module name="AnonInnerLength"/>        
        <module name="ParameterNumber"/>


        <!-- Whitespace                                          -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>        
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
        </module>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="RightCurly"/>
        
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_ELSE"/> <!-- only enforce braces with 'else'     -->
        </module>                                          <!-- encourage short form for one liners -->

        
        <!-- Complexity Metrics                                        -->
        <!-- see http://checkstyle.sourceforge.net/config_metrics.html -->        
        <module name="BooleanExpressionComplexity">
            <property name="max" value="7"/>
        </module>
        

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="DoubleCheckedLocking"/> 
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="CovariantEquals"/>

        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="ignoreAbstractMethods" value="true"/>
        </module>

        <module name="IllegalType"/>
        <module name="IllegalCatch"/>
        
        <!-- prefer #valueOf() instead of new object creation -->
        <module name="IllegalInstantiation"> 
            <property name="classes" value="java.lang.Boolean"/> 
        </module>
        
        <module name="InnerAssignment"/>        
        <module name="MultipleVariableDeclarations"/>
        <module name="MultipleStringLiterals"/>
        <module name="MissingSwitchDefault"/>
        <module name="DefaultComesLast"/>
        <module name="PackageDeclaration"/>
        <module name="RedundantThrows"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
                 
                                       
        <!-- Effective Java, by Joshua Bloch           -->
        <!-- http://java.sun.com/docs/books/effective/ -->
        <module name="NoClone"/>     <!-- use a clone constructor instead -->
        <module name="NoFinalizer"/> <!-- prefer finalizer gaurdian idom  -->


        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->        
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        
        <module name="VisibilityModifier">
            <property name="protectedAllowed" value="true"/>
        </module>


        <!-- Miscellaneous other checks                    -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="UpperEll"/>

        <module name="TodoComment">
            <property name="format" value="(TODO|Todo|todo|FIXME):?"/>
        </module>
        
        
    </module> <!-- end TreeWalker -->
</module> <!-- end Checker -->
